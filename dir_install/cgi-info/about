#!/usr/bin/perl
# About the ShellDB
# George Bouras, george.mpouras@yandex.com

use FindBin;
use lib "$FindBin::Bin/../lib_perl";
use shelldb;

$output->{os}			= eval{ local $_ = undef; local $/ = undef; open __F, -f '/etc/redhat-release' ? '/etc/redhat-release' : '/etc/issue'; if (fileno __F) { ($_= <__F>)=~s/\s*$//s; $_ = join ' ', split /\v/, $_ } close __F; $_ // $^O };
$output->{version}		= $shelldb::VERSION;
$output->{'started'}	= scalar localtime &uptime_shelldb;
$output->{'http server'}= qx|$FindBin::Bin/../bin/lighttpd -v|; chomp $output->{'http server'};

open FILE, '<', "$FindBin::Bin/../config/shelldb.cfg" or Exit(30, "Could not read configuration file because $!");

	while (<FILE>) {
	my ($k,$v) = $_ =~/^([^=]+)=(.+?)\s*$/ or next;
	$v=~s/"//g;
	if ($k eq 'build_date') { $output->{'Build date'}=$v }
	if ($k eq 'developers') { $output->{'Developers'}=[ split /\s*(?:,|;|\|)\s*/, $v ]  }
	}

close FILE;

&Exit;

sub uptime_shelldb {
my $pid = -1;

	if (-f "$FindBin::Bin/../bin/run/shelldb.pid") {
	open  FILE, '<', "$FindBin::Bin/../bin/run/shelldb.pid" or Exit(31, "Could not read shelldb pid file because $!");
	$pid=<FILE>;
	close FILE;
	chomp $pid
	}

-d "/proc/$pid" ? [stat "/proc/$pid"]->[10] : $^T
}