#!/usr/bin/perl
# Rename a key. Example of POST request (json)
# 
#	{ 
#	"db"         : "SomeDB",	The database
#	"key"        : "/k1/k2",	key
#   "new_name"   : "/k1/k3",	new key name
#	"check_data" : false		true/false (optional) default is true
#	}							If true, rename the key only if there are not sub-keys
#								This is a safety guard for not deleting other keys by mistake
#
# George Bouras
# george.mpouras@yandex.com

use strict;
use warnings;
use lib '/opt/shelldb/lib_perl';
use shelldb;

my $rm='/usr/bin/rm';

exists $input->{$_}				|| Exit 2,"key $_ is missing from your input" foreach qw/db key new_name/;
-d "$datadir/$input->{db}/data"	|| Exit 40,"The database $input->{db} do not exist";
$input->{$_}=~s/^\/*(.*?)\/*$/$1/ foreach qw/key new_name/;



if	(-d "$datadir/$input->{db}/data/$input->{key}") {
Exit if $input->{new_name} eq $input->{key};

	if (exists $input->{check_data} ? $input->{check_data}=~/(?i)true|y|1/ ? 1:0 : 1) {
	opendir DIR, "$datadir/$input->{db}/data/$input->{key}";
		while (readdir DIR) {
		next if /^\.\.?$/;
		if (-d "$datadir/$input->{db}/data/$input->{key}/$_") { closedir DIR; Exit(41, "Can not rename the key $input->{key} because it holds sub-keys. Try again with check_data:false") }
		}
	closedir DIR
	}

	if (-f "$datadir/$input->{db}/data/$input->{new_name}") {
	# destination exists and it is a file
	Exit 42,"Can not rename $input->{key} to $input->{new_name} because already exists"
	}
	if (-d "$datadir/$input->{db}/data/$input->{new_name}") {

	# The destination exists and it is a directory. We must move contents to destination directory
	opendir DIR, "$datadir/$input->{db}/data/$input->{key}" or Exit 43,"Could not read key $input->{key} because $!";
	foreach (grep ! /^\.+$/, readdir DIR) { Exit(44, "Could not rename sub-key $_ because already exists at destination") if -e "$datadir/$input->{db}/data/$input->{new_name}/$_" }
	rewinddir DIR;
	foreach (grep ! /^\.+$/, readdir DIR) { rename "$datadir/$input->{db}/data/$input->{key}/$_", "$datadir/$input->{db}/data/$input->{new_name}/$_" or Exit 45,"Merge operation from $input->{key} to $input->{new_name} failed because $!" }
	closedir DIR;
	rmdir "$datadir/$input->{db}/data/$input->{key}" or Exit 46,"Could not delete empty key $input->{key} because $!"
	}
	else {
	rename "$datadir/$input->{db}/data/$input->{key}", "$datadir/$input->{db}/data/$input->{new_name}" or Exit 47,"Could not rename $input->{key} to $input->{new_name} because $!"
	}

}
elsif	(-f "$datadir/$input->{db}/data/$input->{key}") {
Exit if $input->{new_name} eq $input->{key};

	if (-f "$datadir/$input->{db}/data/$input->{new_name}") {
	# The destination exists as file. We must append the source content to destination
	open FILE1, '<',  "$datadir/$input->{db}/data/$input->{key}"		or Exit 48, "Could not read source file $$input->{key} because $!";
	open FILE2, '>>', "$datadir/$input->{db}/data/$input->{new_name}"	or Exit 49, "Could not read destination file $input->{new_name} because $!";
	while(<FILE1>) { print FILE2 $_ }
	close FILE2;
	close FILE1;
	unlink "$datadir/$input->{db}/data/$input->{key}" or Exit 50, "Could not delete key $input->{new_name} because $!";
	}
	if (-d "$datadir/$input->{db}/data/$input->{new_name}") {
	Exit 51,"Can not rename $input->{key} to $input->{new_name} because already exists"
	}
	else {
	rename "$datadir/$input->{db}/data/$input->{key}", "$datadir/$input->{db}/data/$input->{new_name}" or Exit 52,"Could not rename $input->{key} to $input->{new_name} because $!"
	}
}
else {
Exit 53,"The key $input->{key} do not exist"
}


Exit