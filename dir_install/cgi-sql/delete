#!/usr/bin/perl
# Delete a key from the selected database
# Example of POST request (json)
# 
#	{
#	"db"         : "SomeDB",	The database
#	"key"        : "k1/k2",		Key full path
#	"check_data" : false		true/false (optional) default is true
#	}							If true, deletes the key only if there are not sub-keys
#								This is a safety guard for not deleting other keys by mistake
#
# George Bouras
# george.mpouras@yandex.com

use lib '/opt/shelldb/lib_perl';
use shelldb;

my $find='/usr/bin/find';
my $rm='/usr/bin/rm';


exists $input->{$_} || Exit(30, "key $_ is missing from your input") foreach qw/db key/;
-d "$datadir/$input->{db}/data"	|| Exit(31, "The database $input->{db} do not exist");
$input->{key}=~s/^\/*(.*?)\/*$/$1/;
my $type = -d "$datadir/$input->{db}/data/$input->{key}" ? 'd' : -f "$datadir/$input->{db}/data/$input->{key}" ? 'f' : Exit 32,"The Key $input->{key} do not exist";

if ((exists $input->{check_data} ? $input->{check_data}=~/(?i)true|y|1/ ? 1:0 : 1) && ($type eq 'd')) {
opendir DIR, "$datadir/$input->{db}/data/$input->{key}";
	while (readdir DIR) {
	next if /^\.\.?$/;
	if (-d "$datadir/$input->{db}/data/$input->{key}/$_") { closedir DIR; Exit 33,"Can not delete the key $input->{key} because it holds sub-keys. Try again with check_data:false" }
	}
closedir DIR
}


if ($type eq 'f') {
unlink "$datadir/$input->{db}/data/$input->{key}" or Exit 34,"Could not delete key because $!"
}
else {
# Rename the directory key to prohibit insertions during deletion
rename "$datadir/$input->{db}/data/$input->{key}", "$datadir/$input->{db}/data/$input->{key}.DELETE__" or Exit 35, "Could not mark for deletion because $!";
system "$find \"$datadir/$input->{db}/data/$input->{key}.DELETE__\" -depth -exec $rm -rf {} \\; 1> /dev/null 2>&1 &"
}

Exit