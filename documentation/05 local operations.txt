If you have access to server's command line, you can avoid the web server
and the http REST api by sending the json data directly to ShellDB scripts.
Some examples are.


set the enviroment variables

	export REQUEST_METHOD=POST
	export QUERY_STRING="pretty=true&canonical=true"


Info

	echo '{}' | perl /opt/shelldb/cgi-info/about
	echo '{}' | perl /opt/shelldb/cgi-info/license
	echo '{}' | perl /opt/shelldb/cgi-info/enviroment


Database management

	echo '{"db": "DB?" }'                  | perl /opt/shelldb/cgi-db/list
	echo '{"db": "DB*" }'                  | perl /opt/shelldb/cgi-db/list | jq '.database|.[]|{name,status}'
	echo '{"db": "DB*" }'                  | perl /opt/shelldb/cgi-db/list | jq '.database|.[].name'
	echo '{"db": "DB3" }'                  | perl /opt/shelldb/cgi-db/create
	echo '{"db": "DB3" }'                  | perl /opt/shelldb/cgi-db/drop
	echo '{"db": "D??" }'                  | perl /opt/shelldb/cgi-db/open
	echo '{"db": "DB*" }'                  | perl /opt/shelldb/cgi-db/close
	echo '{"db": "DB*" }'                  | perl /opt/shelldb/cgi-db/vacuum
	echo '{"db":"DB1","size":"249715200"}' | perl /opt/shelldb/cgi-db/expand


Data management

	jq -c . insert.json | /perl /opt/shelldb/cgi-sql/insert
	jq -c . query.json  | /perl /opt/shelldb/cgi-sql/query
	jq -c . exist.json  | /perl /opt/shelldb/cgi-sql/exist
	jq -c . rename.json | /perl /opt/shelldb/cgi-sql/rename
	echo '{"db":"DB1","key":"joe"}'                    | perl /opt/shelldb/cgi-sql/exist
	echo '{"db":"DB1","key":"joe","check_data":false}' | perl /opt/shelldb/cgi-sql/delete
